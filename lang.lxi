%option yylineno
%{
# include "grammar.tab.h"
%}

DIGIT 		[0-9] 
NON_ZERO_DIGIT [1-9]
LETTER      [A-Za-z]
ID 		[A-Z][A-Z0-9]*
ZERO          0
CHARACTER [A-Za-z0-9 ]

%%

[ \t\n\r]                {}

("-"|"+")0+             {return NEGPOSDIGIT;}

"START" {return START;}
"FINISH" {return FINISH;}
"DEF" {return DEF;}
"NUMBER" {return NUMBER;}
"STRING" {return STRING;}
"CHAR" {return CHAR;}
"ARRAY" {return ARRAY;}
"OF" {return OF;}
"UNDEFINED" {return UNDEFINED;}
"READ" {return READ;}
"IF" {return IF;}
"STARTIF" {return STARTIF;}
"FINISHIF" {return FINISHIF;}
"ASSIGN" {return ASSIGN;}
"WHILE" {return WHILE;}
"STARTWHILE" {return STARTWHILE;}
"FINISHWHILE" {return FINISHWHILE;}
"PROC" {return PROC;}
"STARTPROC" {return STARTPROC;}
"FINISHPROC" {return FINISHPROC;}
"CALL" {return CALL;}
"RETURN" {return RETURN;}
"PRINT"  {return PRINT;}


{DIGIT}{1}                               {return constant;}
["-"]?{NON_ZERO_DIGIT}{DIGIT}*	      {return constant;}

{ID} 		      {return id;}

"+" {return OP_PLUS;}
"-" {return OP_MINUS;}
"*" {return OP_MUL;}
"/" {return OP_DIV;}
"<" {return OP_LT;}
"<=" {return OP_LTE;}
"===" {return OP_EQ;}
"!==" {return OP_NEQ;}
">" {return OP_RT;}
">=" {return OP_RTE;}
"||" {return OP_OR;}
"&&" {return OP_AND;}

";" {return SEP_SEMICOL;}
"," {return SEP_COM;}
":" {return SEP_COL;}
"[" {return SEP_SQBR;}
"]" {return SEP_SQBREND;}
"(" {return SEP_RBR;}
")" {return SEP_RBREND;}

{DIGIT}+{LETTER}+({DIGIT}|{LETTER})*  {return ERRORNUMCONST;}

"'"{LETTER}"'"|"'"{DIGIT}"'" {return constant;}

\"{CHARACTER}+\"  {return constant;}

. {printf("%s unknown character\n", yytext); exit(0);}

%%

int yywrap() {
    return 1;
}
/*
int yywrap(){}

int main(){

yylex();

return 0;
}
*/